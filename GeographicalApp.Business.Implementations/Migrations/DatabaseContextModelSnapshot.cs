// <auto-generated />
using GeographicalApp.Business.Implementations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeographicalApp.Business.Implementations.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GeographicalApp.Business.Definitions.Models.GeographicalDistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GeographicalDistrict");
                });

            modelBuilder.Entity("GeographicalApp.Business.Definitions.Models.Shape", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Coordinates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GeographicalDistrict_Id")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GeographicalDistrict_Id")
                        .IsUnique();

                    b.ToTable("Shape");
                });

            modelBuilder.Entity("GeographicalApp.Business.Definitions.Models.Shape", b =>
                {
                    b.HasOne("GeographicalApp.Business.Definitions.Models.GeographicalDistrict", "GeographicalDistrict")
                        .WithOne("Shape")
                        .HasForeignKey("GeographicalApp.Business.Definitions.Models.Shape", "GeographicalDistrict_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeographicalDistrict");
                });

            modelBuilder.Entity("GeographicalApp.Business.Definitions.Models.GeographicalDistrict", b =>
                {
                    b.Navigation("Shape")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
